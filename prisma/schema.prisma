// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("REMOTE_DB_URL")
}

model Commands {
  id          Int     @id @default(autoincrement())
  uniqueName  String  @unique
  name        String
  enabled     Boolean
  message     Json?
  alias       String  @default("")
  channelName String  @default("")
  isCore      Boolean @default(false)
}

model SubCommands {
  id            Int    @id @default(autoincrement())
  uniqueName    String @unique
  name          String
  parentCommand String
  message       Json?
  alias         String @default("")
  channelName   String @default("")
}

model User {
  id           Int     @id @default(autoincrement())
  userid       String  @unique
  username     String
  channel      String
  sentMessages Int     @default(0)
  points       Int     @default(0)
  isBot        Boolean @default(false)
}

model Channel {
  id         Int     @id @default(autoincrement())
  name       String  @unique
  channel_id String  @unique
  enabled    Boolean @default(false)
  token      String  @unique
}

model Solo {
  id         Int     @id @default(autoincrement())
  user1      String
  user2      String
  channel    String
  inProgress Boolean
  points     Int
  winner     String?
}

model WebuiUser {
  id        Int    @id @default(autoincrement())
  username  String @unique()
  password  String
  token     String @default("")
  channelId Int    @default(-1)
  settings  Json
  perms     String @default("user")
}

model ChannelAccess {
  id          Int    @id @default(autoincrement())
  userid      Int
  channelId   Int
  accessLevel String @default("MOD")
}

model Timers {
  id        Int    @id @default(autoincrement())
  channelId Int
  timeout   Int
  message   String
}

model TriggerWords {
  id        Int     @id @default(autoincrement())
  channelId Int
  triggers  String
  response  String
  enabled   Boolean
}

model R6DleOperators {
  id      Int     @id @default(autoincrement())
  enabled Boolean @default(false)
  gender  String  @default("Other")
  name    String  @unique()
  role    String
  side    String
  country String
  region  String
  org     String
  squad   String
  release Int
  speed   Int
}

model R6DleGame {
  id         Int                 @id @default(autoincrement())
  operator   String
  winner     String?
  channel    String
  history    R6DleGuessHistory[]
  inProgress Boolean
}

model R6DleGuessHistory {
  id           Int       @id @default(autoincrement())
  gameId       Int
  game         R6DleGame @relation(fields: [gameId], references: [id])
  guess        String
  player       String
  correctGuess Boolean
}
